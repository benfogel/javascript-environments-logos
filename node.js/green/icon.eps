%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.10.1 (Build 14B25) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 128 128
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 128 128
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.47014695 0.71581274 0.26082101 sc
q
0.032542374 127.93243 m
128.03255 127.93243 l
128.03255 -0.067571431 l
0.032542374 -0.067571431 l
0.032542374 127.93243 l
h
0.032542374 127.93243 m
W*
0 0 128 128 rc
-1.2174577 129.18243 m
129.28255 129.18243 l
129.28255 -1.3175714 l
-1.2174577 -1.3175714 l
h
f
Q
0.17869577 0.1803062 0.1707772 sc
q
32.084068 63.257027 m
32.084068 63.551258 31.929491 63.821602 31.675661 63.967628 c
24.913357 67.862625 l
24.798916 67.929939 24.670372 67.965225 24.540747 67.970657 c
24.470779 67.970657 l
24.341696 67.965225 24.213696 67.929939 24.097628 67.862625 c
17.33478 63.967628 l
17.082577 63.821602 16.925831 63.551258 16.925831 63.257027 c
16.940475 52.767944 l
16.940475 52.621914 17.016407 52.486198 17.144407 52.414543 c
17.270237 52.33963 17.425356 52.33963 17.550102 52.414543 c
21.569628 54.71843 l
21.823458 54.869343 21.978033 55.135887 21.978033 55.427399 c
21.978033 60.32777 l
21.978033 60.620373 22.133152 60.890713 22.385899 61.035656 c
24.097628 62.022572 l
24.225084 62.095856 24.364475 62.132229 24.507118 62.132229 c
24.645966 62.132229 24.789152 62.095856 24.913357 62.022572 c
26.624001 61.035656 l
26.877289 60.890713 27.032406 60.620373 27.032406 60.32777 c
27.032406 55.427399 l
27.032406 55.135887 27.189152 54.867714 27.441898 54.71843 c
31.459797 52.414543 l
31.585627 52.33963 31.742916 52.33963 31.868204 52.414543 c
31.992407 52.486198 32.071053 52.621914 32.071053 52.767944 c
32.084068 63.257027 l
W*
0 0 128 128 rc
15.675831 69.220657 m
33.334068 69.220657 l
33.334068 51.108356 l
15.675831 51.108356 l
h
f
Q
q
67.567726 57.795341 m
67.567726 57.722599 67.528679 57.654743 67.465759 57.61837 c
65.142776 56.278599 l
65.079865 56.242229 65.001762 56.242229 64.93885 56.278599 c
62.615864 57.61837 l
62.552406 57.654743 62.513897 57.722599 62.513897 57.795341 c
62.513897 60.479771 l
62.513897 60.553059 62.552406 60.620373 62.615864 60.657288 c
64.938309 61.999771 l
65.001762 62.036144 65.079865 62.036144 65.142776 61.999771 c
67.465759 60.657288 l
67.528679 60.620373 67.567726 60.553059 67.567726 60.479771 c
67.567726 57.795341 l
67.567726 57.795341 l
h
68.195251 77.676399 m
68.068878 77.746429 67.914307 77.744797 67.789558 77.671516 c
67.66481 77.598228 67.587799 77.464142 67.587799 77.319199 c
67.587799 66.931625 l
67.587799 66.829575 67.533562 66.734573 67.445152 66.68354 c
67.356743 66.632515 67.247726 66.632515 67.159325 66.68354 c
65.465492 67.660141 l
65.212746 67.806175 64.90197 67.805626 64.649223 67.660141 c
57.883659 63.752113 l
57.630917 63.606087 57.475254 63.336285 57.475254 63.044228 c
57.475254 55.227085 l
57.475254 54.934486 57.630917 54.664684 57.883659 54.518658 c
64.648682 50.607914 l
64.901421 50.461887 65.212746 50.461887 65.466034 50.607914 c
72.232132 54.518658 l
72.484879 54.664684 72.640541 54.934486 72.640541 55.227085 c
72.640541 74.713486 l
72.640541 75.009888 72.480003 75.282944 72.221291 75.427345 c
68.195251 77.676399 l
68.195251 77.676399 l
h
68.195251 77.676399 m
W*
0 0 128 128 rc
56.225254 78.97773 m
73.890541 78.97773 l
73.890541 49.248394 l
56.225254 49.248394 l
h
f
Q
q
92.399727 60.550343 m
92.65139 60.696373 92.805969 60.96563 92.805969 61.257141 c
92.805969 63.151714 l
92.805969 63.442684 92.65139 63.712486 92.399185 63.858513 c
85.677559 67.764915 l
85.424271 67.912025 85.112404 67.912575 84.858574 67.765999 c
78.095726 63.857971 l
77.842979 63.711945 77.687325 63.442142 77.687325 63.150085 c
77.687325 55.335114 l
77.687325 55.040886 77.845154 54.77 78.100067 54.624516 c
84.821152 50.791401 l
85.069016 50.649715 85.372749 50.648628 85.622238 50.787056 c
89.687325 53.048599 l
89.816406 53.120258 89.896675 53.25597 89.897217 53.403088 c
89.898308 53.550743 89.819664 53.687 89.6922 53.760284 c
82.886505 57.669945 l
82.759048 57.743229 82.680946 57.878399 82.680946 58.024971 c
82.680946 60.474342 l
82.680946 60.620373 82.759048 60.755543 82.885422 60.828285 c
85.003929 62.050259 l
85.129761 62.123543 85.285423 62.123543 85.411255 62.050259 c
87.530846 60.828285 l
87.657219 60.755543 87.735321 60.620373 87.735321 60.474342 c
87.735321 58.547199 l
87.735321 58.400627 87.813423 58.265457 87.939796 58.192715 c
88.066711 58.119427 88.222374 58.119972 88.348747 58.193256 c
92.399727 60.550343 l
W*
0 0 128 128 rc
76.437325 69.125587 m
94.055969 69.125587 l
94.055969 49.434177 l
76.437325 49.434177 l
h
f
Q
1 0.99871939 0.9961471 sc
q
44.386169 67.807259 m
44.638916 67.953285 44.950237 67.953285 45.202984 67.807259 c
51.967457 63.900314 l
52.220203 63.754284 52.375866 63.483944 52.375866 63.191887 c
52.375866 55.371487 l
52.375866 55.07943 52.220203 54.809628 51.967457 54.663055 c
45.202984 50.752857 l
44.950237 50.606827 44.638916 50.606827 44.385628 50.752857 c
37.62278 54.663055 l
37.370033 54.809628 37.214375 55.07943 37.214375 55.371487 c
37.214375 63.191887 l
37.214375 63.483944 37.370033 63.754284 37.623322 63.900314 c
44.386169 67.807259 l
W*
0 0 128 128 rc
35.964375 69.166779 m
53.625866 69.166779 l
53.625866 49.393337 l
35.964375 49.393337 l
h
f
Q
q
105.53383 50.641571 m
105.30061 50.641571 105.06902 50.70237 104.86508 50.820713 c
102.73518 52.081772 l
102.41736 52.25983 102.57247 52.3228 102.67715 52.359715 c
103.10183 52.506828 103.18752 52.541027 103.6404 52.797798 c
103.68759 52.824402 103.74997 52.814629 103.79878 52.785858 c
105.43458 51.813599 l
105.49424 51.780487 105.57777 51.780487 105.63255 51.813599 c
112.01085 55.498516 l
112.07051 55.532715 112.10847 55.600571 112.10847 55.671143 c
112.10847 63.039341 l
112.10847 63.111 112.07051 63.178314 112.00977 63.215229 c
105.63363 66.896889 l
105.57451 66.931625 105.49641 66.931625 105.43674 66.896889 c
99.062241 63.214142 l
99.000404 63.178314 98.961357 63.109371 98.961357 63.039341 c
98.961357 55.671143 l
98.961357 55.600571 99.000404 55.534344 99.061691 55.500687 c
100.80922 54.490429 l
101.75729 54.015972 102.33817 54.57457 102.33817 55.135887 c
102.33817 62.410713 l
102.33817 62.513313 102.42061 62.5942 102.52312 62.5942 c
103.33234 62.5942 l
103.43322 62.5942 103.51675 62.513313 103.51675 62.410713 c
103.51675 55.135887 l
103.51675 53.8694 102.82793 53.143059 101.6282 53.143059 c
101.25939 53.143059 100.96922 53.143059 100.15891 53.542599 c
98.486237 54.506714 l
98.072952 54.745571 97.81749 55.192886 97.81749 55.671143 c
97.81749 63.039341 l
97.81749 63.517601 98.072952 63.964912 98.486237 64.202682 c
104.86508 67.891945 l
105.26861 68.120483 105.80502 68.120483 106.20529 67.891945 c
112.5836 64.202682 l
112.99688 63.963829 113.25343 63.517601 113.25343 63.039341 c
113.25343 55.671143 l
113.25343 55.192886 112.99688 54.7472 112.5836 54.506714 c
106.20529 50.820713 l
106.00136 50.70237 105.7703 50.641571 105.53383 50.641571 c
W*
0 0 128 128 rc
96.56749 69.313347 m
114.50343 69.313347 l
114.50343 49.391571 l
96.56749 49.391571 l
h
f
Q
q
107.50427 55.717285 m
104.71268 55.717285 104.128 57.000057 104.128 58.075459 c
104.128 58.178059 104.21044 58.259487 104.31241 58.259487 c
105.13736 58.259487 l
105.22956 58.259487 105.30603 58.193256 105.32068 58.103142 c
105.44488 57.262798 105.81641 56.838829 107.50427 56.838829 c
108.84773 56.838829 109.41993 57.14283 109.41993 57.856686 c
109.41993 58.268173 109.25776 58.573257 107.16962 58.777916 c
105.42427 58.950542 104.34495 59.336514 104.34495 60.734371 c
104.34495 62.022572 105.4297 62.790714 107.24827 62.790714 c
109.29193 62.790714 110.30292 62.080658 110.43092 60.5574 c
110.4358 60.505287 110.41736 60.4548 110.38264 60.415714 c
110.34739 60.378799 110.29858 60.356544 110.2476 60.356544 c
109.41939 60.356544 l
109.33369 60.356544 109.25776 60.417885 109.24041 60.500942 c
109.0419 61.385258 108.55865 61.667542 107.24827 61.667542 c
105.78115 61.667542 105.61085 61.15617 105.61085 60.772915 c
105.61085 60.308228 105.81207 60.173058 107.79282 59.910858 c
109.75295 59.651371 110.6842 59.284401 110.6842 57.905544 c
110.6842 56.514198 109.5257 55.717285 107.50427 55.717285 c
W*
0 0 128 128 rc
102.878 64.040718 m
111.9342 64.040718 l
111.9342 54.467285 l
102.878 54.467285 l
h
f
Q
q
85.168274 60.916229 m
85.217087 60.944458 85.276749 60.944458 85.32502 60.916229 c
86.623459 60.166542 l
86.67173 60.138313 86.701561 60.086742 86.701561 60.03083 c
86.701561 58.530373 l
86.701561 58.474457 86.67173 58.422344 86.623459 58.394657 c
85.32502 57.64497 l
85.276749 57.616741 85.217087 57.616741 85.168274 57.64497 c
83.87146 58.394657 l
83.822647 58.422344 83.792816 58.474457 83.792816 58.530373 c
83.792816 60.03083 l
83.792816 60.086742 83.822647 60.138313 83.87146 60.166542 c
85.168274 60.916229 l
W*
0 0 128 128 rc
82.542816 62.187401 m
87.951561 62.187401 l
87.951561 56.373798 l
82.542816 56.373798 l
h
f
ep
end
%%Trailer
%%EOF
